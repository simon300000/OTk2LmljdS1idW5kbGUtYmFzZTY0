996.ICU
===

## Esittelyssä ”996”.
Työskentele ”996”, joudu ICU:hun

”996”-työaikataululla viitataan laittomaan työaikatauluun, joka alkaa klo 9.00 ja päättyy klo 21.00, kuusi päivää viikossa, ja joka on kasvattanut suosiotaan.

”996”-työaikataulua noudattavasa yrityksessä työskentely tarkoittaa yleensä työskentelyä vähintään 60 tuntia viikossa.

## Laki ja asetukset

”996” -työaikataulu **rikkoo suoraan** Kiinan kansantasavallan perustuslakia setä monia muita lakeja

### [Kiinan kansantasavallan perustuslaki](http://www.npc.gov.cn/englishnpc/Constitution/node_2825.htm)

#### II luku, 43. artikla:
> Kiinan kansantasavallassa työskentelevillä on oikeus levätä.
>
> Valtio laajentaa työväestön lepo- ja virkistysmahdollisuuksia ja määrää työntekijöille ja henkilökunnalle työajat ja lomat.

### [Kiinan kansantasavallan työvoimalaki](http://english.gov.cn/archive/laws_regulations/2014/08/23/content_281474983042473.htm)

#### I luku, 3. artikla:
> Työntekijöillä on yhtäläiset oikeudet työhön ja ammatinvalintaan, **oikeus korvaukseen työstä**, **lepoon ja lomaan**, työturvallisuuden ja -terveyden suojeluun, ammatillisten taitojen koulutukseen, sosiaaliturvaan, hyvinvointiin ja työtaistelujen sovitteluun, sekä muita lain määräämiä työhön liittyviä oikeuksia.

#### IV luku, 36. artikla:
> Valtion on harjoitettavaa työaikajärjestelmää, jossa työntekijöiden on työskenneltävä keskimäärin enintään kahdeksan tuntia päivässä ja enintään 44 tuntia viikossa.

#### IV luku, 39. artikla:
> Jos yritys ei pysty noudattamaan tämän lain 36. ja 38. artiklan määräyksiä sen tuotannon erityisluonteen vuoksi, se voi työvoimatoimiston suostumuksella ottaa käyttöön muita työaikaa ja lepoa koskevia sääntöjä.

#### IV luku, 41. artikla:
Työyksikkö voi pidentää työaikojaan kuultuaan ammattiyhdistystä ja työntekijöitä mikäli sen tuotanto tai liiketoiminta sitä edellyttää, mutta työajan pidennys ei yleensä saa ylittää yhtä tuntia päivässä; mikäli tällaista pidentämistä tarvitaan erityisistä syistä, työajan pidennys ei saa ylittää kolmea tuntia päivässä, sillä ehdolla, että työntekijöiden terveys taataan. Työaikaa ei kuitenkaan saa kuukaudessa pidentää yli 36 tunnilla.

#### IV luku, 43. artikla:
> Työyksikkö ei saa pidentää työntekijöiden työaikaa tämän lain määräysten vastaisesti.

#### IV luku, 44. artikla:
> Työyksikön on maksettava työstä seuraavasti normaalia korkeampaa korvausta:
>
> (1) vähintään 150 prosenttia normaalipalkasta, jos työaikaa pidennetään;
>
> (2) vähintään 200 prosenttia normaalipalkasta, jos työtä tehdään vapaapäivänä eikä korvaavia vapaapäiviä voida järjestää; tai
>
> (3) vähintään 300 prosenttia normaalipalkasta, jos työtä tehdään lakisääteisinä vapaapäivinä.

#### XII luku, 90. artikla:
> Mikäli työyksikkö pidentää työntekijöidensä työaikaa tämän lain määräysten vastaisesti, hallinnollisen työvoimaviraston on annettava sille varoitus ja määrättävä sitä tekemään korjauksia, minkä lisäksi se voi määrätä sakkoja.

#### XII luku, 91. artikla:
> Mikäli työyksikkö syyllistyy johonkin seuraavista työntekijöiden laillisia oikeuksia ja etuja rikkovista rikkomuksista, hallinnollisen työvoimaviraston on määrätävä sitä maksamaan työntekijöilleen palkkaa tai korvaamaan taloudelliset vahingot, minkä lisäksi se voi määrätä sitä maksamaan korvausta:
>
> ......
>
> **(2) kieltäytyminen maksamasta työntekijöille korvausta pidennetyistä työajoista;**
>
> ......

### [Kiinan kansantasavallan työsopimuslaki](http://english.gov.cn/archive/laws_regulations/2014/08/23/content_281474983042501.htm)

#### III luku, 31. artikla:
> Työyksikön on tarkasti noudatettava työkiintiöstä asetettua normia, eikä se saa pakottaa työntekijöitään tekemään ylitöitä tai huijata ylitöihin. Mikäli työyksikkö järjestää työntekijän tekemään ylitöitä, sen on maksettava ylityökorvausta asianmukaisten valtion säädösten mukaisesti.

#### V luku, 62. artikla:
> Vastaanottavan yksikön on suoritettava seuraavat velvoitteet:
> ......
> (3) ylityökorvauksien ja suoritebonusten maksaminen sekä tiettyihin tehtäviin liittyvien hyvinvointietuuksien tarjoaminen;
> ......

#### VII luku, 85. artikla:
> Mikäli työyksikkö syyllistyy johonkin seuraavista rikkomuksista, hallinnollisen työvoimaviraston on määrättävä sitä maksamaan korvaus työstä, maksamaan ylityökorvausta tai muulla tavalla tekemään taloudellinen hyvitys tietyssä ajassa; jos työkorvaus on matalampi kuin paikallinen vähimmäispalkkataso, sen on maksettava erotus. Jos se ei suorita maksua aikarajan puitteissa, sitä on määrättävä maksamaan työntekijälle lisäkorvaus, joka on vähintään 50 prosenttia ja enintään 100 prosenttia maksettavasta summasta:

> (1) työntekijän työvoimakorvausten maksamatta jättäminen ajoissa ja kokonaisuudessaan työsopimuksen tai valtion säädöksen mukaisesti;
> (2) paikallista vähimmäispalkkatasoa matalamman työvoimakorvauksen maksaminen;
> (3) ylityön järjestäminen mutta ylityökorvauksen maksamatta jättäminen; tai
> (4) tämän lain mukaisen taloudellisen korvauksen maksamatta jättäminen työsopimusta purettaessa tai päätettäessä.

### Valtioneuvoston määräyksiä työntekijöiden työajasta

### 3. artikla:
> Työntekijät ja toimihenkilöt työskentelevät 8 tuntia päivässä ja 40 tuntia viikossa.

### 6. artikla:
> Yksikkö tai henkilö ei saa pidentää työntekijöidensä tai toimihenkilöidensä työaikaa ilman lupaa. Mikäli työaikojen pidentäminen on välttämätöntä erityisen tärkeän tehtävän takia, se on pantava täytäntöön asianmukaisten valtion säädösten mukaisesti. 

## suosiotaan ja julkisuutta

* Vuoden 2016 syyskuun alussa useat luotettavat lähteet kertoivat, että ***58.com*** eli `58同城` (NYSE: **WUBA**), mainontayritykseksi luokiteltu yritys, harjoitti ”996”-työaikataulua ilman ylityökorvausta viikonloppuisin. Yritys väitti myöhemmin, että työaikataulua harjoitettiin ainoastaan huippusesongin (syys-lokakuu) kovan kysynnän aiheuttaman ylimääräisen työtaakan vuoksi ja että se ei olisi pakollinen.
* Tammikuussa 2019 ***Youzan.com*** eli `有赞` (HKG: **8083**), hangzhoulainen nettikaupankäyntiyritys, ilmoitti vuotuisessa gaalassaan alkavansa harjoittaa ”996”-työaikataulua. Toimitusjohtaja Bai Ya vastasi:
> Tämä tulee varmasti olemaan oikea päätös, kun muutaman vuoden kuluttua katsomme taaksepäin.
* Maaliskuussa 2019 ***JD.com*** eli `京东` (NASDAQ: **JD**), suuri nettikauppayritys, alkoi harjoittaa ”996”- tai ”995”-työaikataulua joillakin osastoillaan. JD:n PR totesi Maimaissa (`脉脉`, kiinalainen yritysten sosiaalinen alusta);
> [Yrityskulttuuriimme kuuluu] täysi antautuneisuus [liiketoiminnallisten tavoitteiden saavuttamiseksi.

Tämä työaikataulu on vasta vastikään saanut julkisuutta. Sitä on kuitenkin pitkään harjoitettu ”avoimena salaisuutena” useissa yrityksissä Kiinassa.

## Korvaukset ja edut

Työvoimalain mukaan ”996”työaikataulua seuraavien työntekijöiden tulisi saada työstään 2,275-kertainen korvaus. Tämä kuitenkin toteutuu harvoin.

## Repon nimen alkuperä - `996.ICU`

”996”-työaikataulun noudattaminen on ilmeinen terveysriski, joka saattaa johtaa noudattajansa ***I**ntensive **C**are **U**nit*iin (teho-osastolle). Mandariinikiinassa `6` ja `U` rimmaavat.

**Kehittäjien elämillä on väliä**
