996.ICU
===

## Introducing "996"
996 working, ICU waiting.

Ang iskedyul ng "996" ay tumutukoy sa isang iligal na iskedyul ng trabaho sa Tsina. Ito ay naging popular sa mga kumpanya. Ang iskedyul ay nagsisimula mula 9 ng umaga at nagtatapos sa 9 p.m. (12 oras) bawat araw, para sa 6 na araw sa isang linggo. Ang paglilingkod sa isang kumpanya na naghihikayat sa "996" na iskedyul sa trabaho ay karaniwang nangangahulugan ng pagtatrabaho nang hindi bababa sa 72 oras sa isang linggo.

Mga kondisyon sa pagtratrabaho sa mainland ng China (karaniwang oras ng pagtatrabaho): 8 oras sa isang araw, hindi hihigit sa 40 oras kada linggo; ang overtime ay 3 oras sa isang araw at 36 na oras sa isang buwan, ang overtime pay ay hindi mas mababa sa karaniwang suweldo 150%. Ang maximum na oras ng pagtatrabaho bawat linggo ay 48 oras. Ang average na buwanang pwedeng bayaran ay 21.75 na araw.

## Mga Batas at Mga Regulasyon
### Ang Konstitusyon ng Republika ng Tsina

#### Kabanata II: Artikulo 43:
> _ ** Siya na nagtatrabaho sa Republika ng Tsina ay may karapatang magpahinga. ** _
> Pinapalawak ng estado ang mga pasilidad para sa pamamahinga at paggaling ng mga nagtatrabahong tao at nagrereseta ng mga oras ng pagtatrabaho at bakasyon para sa mga manggagawa at kawani.

#### Kabanata I: Artikulo 3:
> Ang mga manggagawa ay magkakaroon ng pantay na karapatan sa pagtatrabaho at pagpili ng trabaho, **ang karapatan sa kabayaran para sa paggawa**, **sa pamamahinga at bakasyon**, sa proteksyon ng kaligtasan at kalusugan sa trabaho, sa pagsasanay sa mga bokasyonal na kasanayan, sa seguro sa lipunan at kapakanan, sa pagsusumite ng mga pagtatalo sa paggawa para sa kasunduan at iba pang mga karapatan na may kaugnayan sa paggawa na itinakda ng batas.

#### Kabanata IV: Artikulo 36:
> Ang Estado ay dapat magsanay ng isang sistema ng oras ng paggawa kung saan ang mga manggagawa ay dapat gumana nang hindi hihigit sa walong oras sa isang araw at hindi hihigit sa 44 oras sa isang linggo sa average.

#### Kabanata IV: Artikulo 41:
> Ang yunit ng nagpapatrabaho ay maaaring magpahaba ng mga oras ng pagtatrabaho bilang kinakailangan sa produksyon o operasyon ng negosyo pagkatapos kumunsulta sa unyon at manggagawa, ngunit ang pinalawig na oras ng pagtatrabaho bawat araw ay pangkalahatan ay hindi hihigit sa isang oras; kung kinakailangan ang naturang extension para sa mga espesyal na kadahilanan, sa ilalim ng kondisyon na ang kaligtasan ng mga manggagawa ay garantisado, ang mga pinalawig na oras ay hindi dapat lumampas sa tatlong oras bawat araw. Gayunpaman, ang kabuuang extension sa isang buwan ay hindi dapat lumagpas sa tatlumpu't anim na oras.

#### Kabanata IV: Artikulo 43:
> Ang yunit ng nagpapatrabaho ay hindi dapat pahabain ang mga oras ng pagtatrabaho ng mga manggagawa na lumalabag sa mga probisyon ng Batas na ito.

#### Kabanata XII: Artikulo 90:
> Kung saan ang yunit ng nagpapatrabaho, na lumalabag sa mga tadhana ng Batas na ito, ay nagpapalawak ng mga oras ng pagtatrabaho ng mga manggagawa, ang administratibong departamento ng paggawa ay dapat bigyan ito ng babala, mag-order ito upang gumawa ng mga pagwawasto, at maaaring magpataw ng mabuti dito.

#### Kabanata XII: Artikulo 91:
> Kung saan ang yunit ng nagpapatrabaho ay gumawa ng alinman sa mga sumusunod na kilos na lumalabag sa mga lehitimong karapatan at interes ng mga manggagawa, ang administratibong departamento ng paggawa ay dapat na mag-order nito upang bayaran ang mga manggagawa na sahod ng sahod o gumawa ng mga pagkalugi sa ekonomiya, at maaaring mag-order din ito na magbayad kabayaran:
> ......
> __(2) Upang tanggihan ang pagbabayad ng mga manggagawa na kabayaran para sa mga pinalawig na oras ng pagtatrabaho;__
> ......

### [Labor Contract Law ng Republika ng Tsina](http://english.gov.cn/archive/laws_regulations/2014/08/23/content_281474983042501.htm)

### Mga Regulasyon ng Konseho ng Estado sa Mga Oras ng Pagtratrabaho ng mga Empleyado

#### Artikulo 3:
> Ang mga manggagawa at kawani ay gagana 8 oras sa isang araw at 40 oras sa isang linggo.

#### Artikulo 6:
> Walang yunit o indibidwal ang dapat pahabain ang mga oras ng pagtatrabaho ng kanilang mga manggagawa at kawani nang walang pahintulot. Kapag ang mga oras ng pagtatrabaho ay kinakailangan upang pahabain para sa layunin ng espesyal na kaso o lumilitaw na pagtatalaga, dapat itong ipatupad alinsunod sa mga kaugnay na probisyon ng Estado.

## Pagkakaroon ng katanyagan at publisidad

- Noong unang bahagi ng Setyembre 2016, maraming mapagkakatiwalaang mga mapagkukunan ang nag-ulat na __*58.com*__ A.K.A. `58 同城` (__*NYSE: WUBA*__), isang pangkat ng mga advertisement na patalastas, ipinakilala ang iskedyul ng "996" na walang overtime pay sa katapusan ng linggo. Sinabi ng kumpanya sa ibang pagkakataon na ang iskedyul ay ginagawa lamang upang pamahalaan ang dagdag na workload sa peak season (Setyembre at Oktubre) at ang iskedyul na ito ay hindi sapilitan.

- Sa Enero 2019, __*Youzan.com*__ A.K.A. `有 赞` (__*HKG: 8083*__), isang kumpanya na Ecommerce na nakabase sa Hangzhou, ay inihayag na ang kumpanya ay magpapatupad ng "996" na iskedyul ng trabaho sa taunang kombensyon nito. Bai Ya, ang CEO ng Youzan, ay tumugon,

  > "Ito ay tiyak na tamang desisyon kapag tiningnan natin ang ilang taon."

- Sa Marso 2019, __*JD.com*__ A.K.A. `京东` (__*NASDAQ: JD*__), isang pangunahing kompanya ng E-commerce, ay nagsimulang magpatibay ng mga "996" o "995" na iskedyul ng trabaho sa ilang mga kagawaran. Ang PR ng JD ay nakasaad sa Maimai (`脉脉`, isang Chinese social network platform ng negosyo),

  > "[Kultura ng aming kumpanya ay] ang buong puso na debosyon sa ating sarili [upang makamit ang mga layunin ng negosyo]."

Gayunpaman, nakakakuha lamang ng mas maraming publisidad, gayunpaman, ang iskedyul ng gawain na ito ay matagal nang kilala na "lihim" na ginagawa sa maraming kumpanya sa Tsina.

## Compensation and benefits

Ayon sa Batas sa Paggawa, ang mga empleyado na sumusunod sa "996" na iskedyul ng trabaho ay dapat bayaran 2.275 beses na mas mataas kaysa sa kanilang pangunahing sahod. Sa kasamaang palad, bihirang makuha ng mga empleyado ang pagbabayad na ito

## Ang pinagmulan ng pangalan ng repo na ito - `996.ICU`

Ano ang 996.ICU? Work 996, sick ICU.(`6` rhymes na may` U` sa Mandarin)

__Developers' lives matter.__
