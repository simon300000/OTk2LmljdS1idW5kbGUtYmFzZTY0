996.ICU
===

## "996" Tanıtımı
996 çalışıyor, ICU bekliyor.

"996" çalışma programı, Çin'de yasadışı bir çalışma programı anlamına geliyor. Bu Yasadışı çalışma programı, şirketler arasında popülerlik kazanıyor. Program haftanın 6 günü sabah 9'da başlıyor ve akşam 9'da bitiyor.

"996" iş programını destekleyen bir şirkette hizmet etmek, genellikle haftada en az 72 saat çalışmak anlamına gelir.

## Yasalar ve Düzenlemeler

"996" iş programı, Çin Halk Cumhuriyeti Anayasası'na ve birçok diğer mevzuatın **doğrudan ihlal** edilmesidir:

### [Çin Halk Cumhuriyeti Anayasası](http://www.npc.gov.cn/englishnpc/Constitution/node_2825.htm)

#### 2. Kısım: 43. Fıkra
>_**Çin Halk Cumhuriyeti’nde çalışan insanlar dinlenme hakkına sahiptir.**_
> Devlet, çalışanların istirahat ve toparlanma tesislerini genişletmekle ve işçiler ve çalışanlar için çalışma saatleri ve tatiller düzenlemekle yükümlüdür.

### [Çin Halk Cumhuriyeti İş Kanunu](http://english.gov.cn/archive/laws_regulations/2014/08/23/content_281474983042473.htm)

#### 1. Kısım: 3. Fıkra:
> İşçiler, istihdam ve meslek seçimi, emek için ücret alma, dinlenme ve tatil yapma, iş güvenliği ve sağlığını koruma, mesleki beceri eğitimi, sosyal sigorta ve refah, kanunla öngörülmüş işçilikle ilgili iskan ve diğer haklar konusunda eşit hakka sahip olmalıdır.

#### 4. Kısım: 36. Fıkra: 
> Devlet, işçilerin günde sekiz saatten fazla ve haftada 44 saatten fazla çalışmayacağı bir çalışma saati sistemi uygulamalıdır.

#### 4. Kısım: 39. Fıkra:
> Bir işletmenin üretiminin özel doğası gereği, Kanunun 36. ve 38. Maddelerinde belirtilen hükümlere uyamadığı durumlarda, idari iş bölümünün onayı ile çalışma ve dinlenme saatleri ile ilgili diğer kuralları kabul edebilir.

#### 4. Kısım: 41. Fıkra:
> İstihdam birimi, sendika ve işçilerle anlaştıktan sonra, üretim veya iş operasyonunun gerektirdiği çalışma saatlerini uzatabilir, ancak günlük ekstra çalışma saati genellikle bir saati geçmemeli; Özel sebeplerden dolayı bu tür bir uzatmaya ihtiyaç duyulursa, işçi sağlığının güvence altına alınması koşuluyla, ekstra saatler günde üç saati aşmamalıdır. Ayrıca, bir ay içindeki toplam uzatma otuz altı saati geçemez.

#### 4. Kısım: 43. Fıkra:
> İstihdam birimi, çalışanların çalışma saatlerini bu Kanun hükümlerine aykırı olarak uzatamaz.

#### 4. Kısım: 44. Fıkra:
> Aşağıdaki koşullardan herhangi birinde, işveren birim, aşağıdaki standartlara göre, normal çalışma saatleri için normalden daha yüksek olan işçi ücretlerini öder:
> 1. Çalışma saatlerinin uzatılması düzenlenirse normal ücretlerin yüzde 150'sinden daha az bir ücret ödememek;
> 2. Kapalı günlerde çalışma düzenlenirse ve telafi günleri düzenlenemezse, normal ücretlerin yüzde 200'ünden daha az ödeme yapmamak; veya
> 3. Resmi tatillerde çalışma düzenlenirse normal ücretlerin yüzde 300'ünden azını ödememek.

#### 12. Kısım: 90. Fıkra:
> İşveren birimin, bu Kanun hükümlerine aykırı olarak, işçilerin çalışma saatlerini uzatması durumunda, idari iş bakanlığı, bir uyarı verir, düzeltmelerini emreder ve para cezası verebilir.

#### 12. Kısım: 91. Fıkra:
> İşveren birimin, işçilerin meşru hak ve menfaatlerini ihlal eden aşağıdaki eylemlerden herhangi birini yerine getirmesi durumunda, idari iş bakanlığı, işçilere ücretlerin ödenmesini ya da ekonomik zararlar için tazminat ödemesini emredecek:
> ......
> __(2) İşçilere, uzun çalışma saatleri için ücret ücretlerini ödemeyi reddetmek;__
> ......

### [Çin Halk Cumhuriyeti İş Sözleşmesi Kanunu](http://english.gov.cn/archive/laws_regulations/2014/08/23/content_281474983042501.htm)

#### 3. Kısım: 31. Fıkra:
> İşveren birim, emek kotası için belirlenen normları kesinlikle uygular ve işçileri fazla mesai yapmaya veya üstü örtülü bir biçimde yapmaya zorlamaz. Eğer bir çalışan birim, bir işçinin fazla mesai yapmasını isterse, Devletin ilgili düzenlemelerine uygun olarak fazla mesai ücreti verir.

#### 5. Kısım: 62. Fıkra:
> Alıcı birim aşağıdaki yükümlülükleri yerine getirir:
> ......
> 3. Fazla mesai ücreti ve performans primi vermek ve belirli görevlerle ilgili sosyal yardımlar sağlamak;
> ......

#### 7. Kısım: 85. Fıkra:
> Çalışan bir birimin aşağıdaki işlemlerden birini yapması durumunda, idari iş bakanlığı, emek ücretini ödemesini, fazla mesai ücretini vermesini veya bir süre içinde başka finansal tazminat ödemesini emreder; eğer emek ücreti yerel asgari ücret oranından düşükse, bu farkı öder. Bu sürenin bitiminde böyle bir ödeme yapmayı başaramazsa, işçiye yüzde 50'den az olmayan ancak ödenecek tutarın yüzde 100'ünden fazla olmayan bir ek ücret ödemesi istenecektir:
> 1. Bir işçiye emek ücretini zamanında ve tam olarak iş sözleşmesinde öngörülen ya da Devlet tarafından öngörülen şekilde ödememek;
> 2. İşçilik ücretini yerel asgari ücret oranının altında bir oranda ödemek;
> 3. Fazla mesai çalışmalarının düzenlenmesi ancak fazla mesai ücreti verilmemesi; veya
> 4. Bir iş sözleşmesini iptal ederken veya sonlandırırken işçiye bu tazminat hükümlerine uygun olarak maddi tazminat ödememek.

### [Çalışanların Çalışma Saatlerine İlişkin Devlet Konseyi Yönetmelikleri](https://www.ilo.org/dyn/travail/docs/369/The%20Regulations%20of%20the%20State%20Council%20on%20the%20Hours%20of%20Work%20of%20Employees.pdf)

### 3. Fıkra:
> İşçiler ve personel, günde 8 saat ve haftada 40 saat çalışacaktır.

### 6. Fıkra:
> Hiçbir birim veya birey, çalışanlarının ve personelinin çalışma saatlerini izinsiz olarak uzatamaz. Çalışma saatleri özel durum veya acil görevlendirme amacıyla uzatılması gerektiğinde, Devletin ilgili hükümlerine göre uygulanır.

## Popülerlik ve tanınırlık kazanma

- Eylül 2016'nın başlarında, sayısız güvenilir kaynak, gizli bir reklam şirketi olan __*58.com*__'un (diğer adıyla `58同城`, __*NYSE: WUBA*__), hafta sonları fazla mesai ücreti ödemeden "996" iş programını uyguladığını bildirdi. Şirket daha sonra programın yalnızca yoğun sezonda (Eylül ve Ekim) ek iş yükünü yönetmek için uygulandığını ve bu programın zorunlu olmadığını iddia etti.

- Ocak 2019'da, Hangzhou merkezli bir e-ticaret şirketi olan __*Youzan.com*__ (diğer adıyla `有赞`, __*HKG: 8083*__), yıllık galalarında şirketin "996" çalışma programını uygulamaya koyacağını açıkladı. Youzan CEO'su Bai Ya,

  > "Birkaç yıl sonra geriye baktığımızda bu kesinlikle doğru bir karar olacak."

- Mart 2019'da büyük bir e-ticaret şirketi olan JD.com, bazı bölümlerde "996" veya "995" çalışma programlarını uygulamaya başladı. JD’nin PR’ı Maimai’de (`脉脉`, Çin’in bir iş sosyal ağ platformu)

    > [Şirket kültürümüz], [iş hedeflerine ulaşmak için kendimizin gönülden bağlılığıdır].

Bu çalışma takvimi sadece son zamanlarda tanınırlık kazanıyor. Ancak Çin'deki birçok şirkette "açık sır" olarak uygulanmaktadır.

## Tazminatlar ve kazançlar

İş Kanunu'na göre, "996" çalışma programını takip eden çalışanlara temel maaşlarının 2.275 katı ödenmesi gerekiyor. Ne yazık ki, çalışanlar bu ödemeyi nadiren alırlar.

## Bu repo adının kökeni -- `996.ICU`

"996" çalışma takviminin kabul edilmesi, görünüşte, sizi bir gün Yoğun Bakım Ünitesine (_**I**ntensive **C**are **U**nit_) gönderebilecek olan sağlık riskine neden olacaktır. (`6`, Mandarin dilinde 'U' ile kafiyeli)