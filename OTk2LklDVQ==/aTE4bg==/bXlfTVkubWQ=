996.ICU
===
Sistem kerja "996", iaitu 9:00 pagi setiap hari, berfungsi sehingga pukul 9 malam dan bekerja 6 hari seminggu.

 Masa kerja mingguan untuk sistem kerja "996" adalah minimum 6x12 = 72 jam.

 **Status semasa peraturan jam kerja di China (waktu kerja standard):**
Masa kerja adalah 8 jam sehari, dan waktu kerja mingguan purata tidak lebih dari 40 jam; had masa kerja adalah 3 jam sehari dan 36 jam sebulan, dan gaji lebih masa tidak kurang dari 150% upah biasa. Waktu kerja maksimal seminggu adalah 48 jam. Purata hari bulanan bulanan ialah 21.75 hari. 

 ## Peraturan berkaitan

 ### [Perlembagaan Republik Rakyat](http://www.npc.gov.cn/npc/xinwen/2018-03/22/content_2052489.htm)

 #### Bab II, Perkara 43：

 > Pekerja di Republik Rakyat China mempunyai hak untuk berehat.
> Negara membangun kemudahan untuk berehat dan pemulihan pekerja, dan menetapkan waktu kerja dan sistem percutian untuk pekerja. 
 ### [Undang-undang Buruh Republik Rakyat](http://www.npc.gov.cn/npc/xinwen/2019-01/07/content_2070261.htm)

 #### Bab 1 Perkara 3：
> Pekerja mempunyai hak yang sama untuk bekerja dan memilih profesion, ** hak untuk imbuhan untuk kerja **, ** hak untuk berehat dan meninggalkan **, hak untuk bekerja keselamatan dan perlindungan kesihatan, hak untuk menerima latihan kemahiran vokasional, insurans sosial dan Hak untuk kebajikan, hak untuk menangani pertikaian buruh, dan hak buruh lain sebagaimana yang ditetapkan oleh undang-undang.

 #### Bab IV Perkara 36：  
 >
> Negara ini mempunyai sistem jam kerja dengan waktu kerja tidak lebih dari 8 jam dan purata tidak lebih dari 44 jam seminggu.

 #### Bab 4 Perkara 39：  
 >
> Sekiranya perusahaan tidak dapat melaksanakan ketentuan-ketentuan Pasal 36 dan 38 UU ini karena karakteristik produksinya, tindakan lain dan langkah-langkah rest dapat dilaksanakan dengan persetujuan dari departemen administrasi buruh.

 #### Bab 4, seksyen 41：    
> Oleh kerana keperluan pengeluaran dan operasi, majikan boleh melanjutkan waktu kerja mereka selepas berunding dengan kesatuan sekerja dan pekerja, biasanya tidak lebih daripada satu jam sehari. Atas sebab-sebab tertentu, perlu untuk memperluas waktu kerja dan memperluas waktu kerja di bawah syarat-syarat untuk memastikan kesihatan pekerja. Tidak lebih daripada tiga jam sehari, tetapi tidak lebih daripada tiga puluh enam jam sebulan.

 #### Bab IV Perkara 43：  
> Majikan tidak boleh melanjutkan waktu kerja pekerja yang melanggar peruntukan Undang-undang ini.

 #### Bab IV Artikel 44：  
> Dalam mana-mana keadaan berikut, majikan hendaklah membayar upah yang lebih tinggi daripada upah pekerja pada waktu kerja biasa mengikut kriteria berikut:
>
> (1) Jika buruh diatur untuk memperpanjang waktu kerja, dia harus membayar tidak kurang dari 150% gaji;
>
> (2) Jika sisa hari disusun untuk kerja buruh dan sisa pekerjaan itu tidak dapat disusun, pembayaran upah tidak kurang dari 200% dari gaji itu hendaklah dibayar;
>
> (3) Jika buruh disusun untuk percutian berkanun, gaji tidak boleh kurang dari 300% gaji.

 #### Bab 12-Perkara 90：  
> Jika majikan melanggar peruntukan undang-undang ini dan memanjangkan waktu kerja, jabatan pentadbiran buruh hendaklah mengeluarkan amaran, pembetulan pesanan, dan mengenakan denda.
 #### Bab 12-Artikel 91：  
> Jika majikan melanggar hak pekerja yang sah, jabatan pentadbiran buruh akan memerintahkan pembayaran upah dan imbuhan pekerja, dan boleh memerintahkan pampasan:
>
>  ……  
>  （二）Tidak mahu membayar pekerja untuk melanjutkan waktu kerja 
>  ……  
>
 ### [Undang-undang Kontrak Buruh Republik Rakyat China](http://www.npc.gov.cn/wxzl/gongbao/2013-04/15/content_1811058.htm)
 #### Bab III Perkara 31：
> Majikan mesti menguatkuasakan standard kuota buruh dan tidak boleh memaksa pekerja untuk bekerja lebih masa. Jika majikan meminta lebih banyak masa, mereka perlu membayar lebih banyak untuk tenaga kerja mengikut peraturan negeri.

 #### Bab V Perkara 62：
> Majikan harus memenuhi kewajipan berikut：
>
> ……  
> （三）Bayar terlalu banyak perbelanjaan kerja, bonus prestasi dan faedah yang berkaitan dengan pekerjaan；  
>
> ……  

 #### Bab VII Perkara 85：
> Jika majikan mempunyai salah satu keadaan berikut, ia akan membayar yuran, bayaran lebih masa atau yuran pampasan ekonomi dalam had masa yang ditetapkan oleh jabatan pentadbiran buruh kerajaan. Jika upah lebih rendah daripada upah minimum tempatan, majikan mesti membayar perbezaan dan majikan tidak membayar tunggakan. Kerajaan mesti memerintahkan majikan membayar denda 50% hingga 100%：  
>  （一）Kegagalan membayar pekerja sepenuhnya dan mengikut masa mengikut kontrak buruh atau peraturan negara；  
>  （二）Bayar kurang daripada gaji minimum tempatan untuk membayar pekerja；  
>  （三）Memerlukan pekerja bekerja lebih masa tanpa pampasan；  
……  
 ### [《Peraturan Majlis Negeri pada jam kerja pekerja》](http://www.mohrss.gov.cn/SYrlzyhshbzb/zcfg/flfg/xzfg/201604/t20160412_237909.html)
 #### Perkara 3：
> Pekerja bekerja 8 jam sehari dan bekerja 40 jam seminggu.
 #### Perkara 6：
> Tiada unit atau individu boleh melanjutkan waktu bekerja tanpa izin. Sekiranya perlu untuk melanjutkan waktu kerja disebabkan oleh keadaan khas dan tugas yang mendesak, ia akan dilaksanakan mengikut peraturan negeri yang berkaitan.
 #### Perkara 7：
> Pertubuhan dan agensi nasional mempunyai masa kerja seragam, dan hari Sabtu dan Ahad adalah rehat mingguan.。  
> Syarikat-syarikat dan institusi-institusi yang tidak dapat memenuhi waktu kerja bersatu seperti yang dinyatakan dalam perenggan terdahulu boleh secara fleksibel mengatur hari rehat mingguan mengikut keadaan sebenar.

 Menurut "Undang-undang Buruh"，Menurut 996 sistem kerja, adalah munasabah untuk memperoleh 2.275 kali gaji semasa.
 
 Apa itu 996.ICU? Kerja 996, jika saya sakit, saya hanya boleh pergi ke ICU.
 
 Developers' lives matter.
