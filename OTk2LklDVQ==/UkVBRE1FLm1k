[996.ICU](https://996.icu/#/en_US)
=======
### **Please note that there exists NO other official account, app or merchandise except for the official domain and this repository.**

* [中文版](./README_CN.md)

The name `996.ICU` refers to **"Work by '996', sick in ICU"**, an ironic saying among Chinese developers, which means that by following the "996" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).

[![Badge](https://img.shields.io/badge/link-996.icu-%23FF4D5B.svg?style=flat-square)](https://996.icu/#/en_US)
[![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg?style=flat-square)](https://github.com/996icu/996.ICU/blob/master/LICENSE)
[![Slack](https://img.shields.io/badge/slack-996icu-green.svg?style=flat-square)](https://join.slack.com/t/996icu/shared_invite/enQtNTg4MjA3MzA1MzgxLWQyYzM5M2IyZmIyMTVjMzU5NTE5MGI5Y2Y2YjgwMmJiMWMxMWMzNGU3NDJmOTdhNmRlYjJlNjk5ZWZhNWIwZGM)
[![HitCount](http://hits.dwyl.io/996icu/996.ICU.svg)](http://hits.dwyl.io/996icu/996.ICU)


Related press coverage:
---
* *RadiiChina:* [GitHub Protest Over Chinese Tech Companies’ “996” Culture Goes Viral](https://radiichina.com/github-protest-chinese-tech-996/)
* *Financial Times:*  [China tech worker protest against long working hours goes viral](https://www.ft.com/content/72754638-55d1-11e9-91f9-b6515a54c5b1)
* *Wired:* [How github is helping overworked Chinese programmers](https://www.wired.com/story/how-github-helping-overworked-chinese-programmers/)

See a [full list of press](externals/news_EN.md)



What is 996?
---

A "996" work schedule refers to an unofficial work schedule (9 a.m.&ndash;9 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the "996" work schedule usually means working for at least 60 hours per week.
Visit [996 working hour system](https://en.wikipedia.org/wiki/996_working_hour_system) on Wikipedia for more details.


What can I do?
---

- Update this [list](blacklist/README.md) with evidence to help every worker.  
- Add this [badge](externals/instruction.md) to your project to support 996.ICU.  
- License your awesome projects with the [Anti 996 License](LICENSE).  
- Add [proposals](proposal/README.md) to give advice about the development of 996.ICU.
- Go home at 6 pm without feeling sorry.


Voices
---

### Government
- [The 996 shall disappear](http://www.xinhuanet.com/politics/2019-04/15/c_1124370790.htm)


### Capitalists
- **Jack Ma, founder of Alibaba**: `'996' is a reward`.
- **Richard Liu, founder of JD.com**: `We will never force our employee to work as '996'`.
However, as a result many anonymous employees says that there is a **list** of departments which **ranked** them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.
- **Bai Ya, founder of Youzan**: `This will definitely be a right decision when we look back in a few years`




Principles and purposes
---

* 996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.

* This is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.

* It is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.

* We are willing to hear all positive and constructive proposals and advocate mature and responsible speech.


Expanding influence
---

Please feel free to [translate 996.ICU's contents](i18n/README.md), adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.

Community powers
---

 - [955.WLB](https://github.com/formulahendry/955.WLB) is a repo that maintains a whitelist of 955 work-life balanced companies.
 - [996.LIST](https://github.com/fengT-T/996_list) is a repo of a rank list of 996 companies and 955 companies.
 - [996.law](https://github.com/CPdogson/996.law) This is a manual for workers who want to conduct labor arbitration and litigation on their own.
 - [996.YAOCL](https://github.com/boycott996/yaocl) Yet Another Overtime Corps List, current another anonymous voting list.
 - [996.Leave](https://github.com/623637646/996.Leave) encourages & introduces working overseas.
 - [996.RIP](https://996.rip) Old news never vanished.
 - [996.Petition](https://github.com/xokctah/996.petition) initiates petitions by sending open letters to relevant government departments.
 - [996.action](https://github.com/CPdogson/996action) Supporters are encouraged to participate in public supervision.
 - [996.avengers](https://github.com/996-icu-avengers/Natasha) adds `996ICU` and `955WLB` tags on recruitment websites.
 - [996.OD](https://github.com/zheolong/996.OD.git) occupational diseases are the forewarning of ICU.
 - [support.996.ICU](https://github.com/msworkers/support.996.ICU) Microsoft and GitHub Workers Support 996.ICU

Where are the issues?
---

Even with interaction limits on, the issues area was totally out of control.
So I **personally** decided to switch it off, not by GitHub or others.


License
---

[Anti-996 License](LICENSE)

 - The purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working
 - See a [full list of projects](awesomelist/README.md) under Anti-996 License

 - This draft is adapted from the MIT license. For a more detailed explanation, please see [Wiki](https://github.com/kattgu7/996-License-Draft/wiki). This license is designed to be compatible with all major open source licenses.  
 - For law professionals or anyone who is willing to contribute to future version directly, please go to [Anti-996-License-1.0](https://github.com/kattgu7/996-License-Draft). Thank you.
 
Contact
---

You can reach me by [E-mail](mailto:996icu.repo@gmail.com) if you need.
